{"ast":null,"code":"var _jsxFileName = \"/Users/sophiabanou/Documents/code/eam-1/react-todo-app/src/pages/Student_dilosi.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\nimport { db } from '../components/firebase.js';\nimport { doc, setDoc, updateDoc, arrayUnion, getDoc, getDocs, collection } from 'firebase/firestore';\nimport { Link } from \"react-router-dom\";\nimport \"./../css/HomePage.css\";\nimport \"./../css/Student_dilosi.css\";\nimport Nav2 from \"./../components/Nav2.js\";\nimport Footer from \"./../components/footer.js\";\nimport Menu from \"./../components/student_menu.js\";\nimport firebase from 'firebase/compat/app';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseTable = () => {\n  _s();\n  const [courses, setCourses] = useState([]);\n  useEffect(() => {\n    // Fetch data from Firebase when the component mounts\n    const fetchCourses = async () => {\n      try {\n        const snapshot = await firebase.database().ref('courses').once('value');\n        const data = snapshot.val();\n\n        // Check if there's data before updating the state\n        if (data) {\n          const coursesArray = Object.values(data);\n          console.log('Courses array:', coursesArray);\n          setCourses(coursesArray);\n        }\n      } catch (error) {\n        console.error('Error fetching data from Firebase:', error);\n      }\n    };\n    fetchCourses();\n  }, []); // Empty dependency array means this effect runs once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Nav2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Course Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Course Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Instructor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.values(courses).map(course => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.professor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)]\n          }, course.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(CourseTable, \"Ks3haE1eP87BHv/TJ29co0rtnQM=\");\n_c = CourseTable;\nexport default CourseTable;\nvar _c;\n$RefreshReg$(_c, \"CourseTable\");","map":{"version":3,"names":["React","useEffect","useState","db","doc","setDoc","updateDoc","arrayUnion","getDoc","getDocs","collection","Link","Nav2","Footer","Menu","firebase","jsxDEV","_jsxDEV","CourseTable","_s","courses","setCourses","fetchCourses","snapshot","database","ref","once","data","val","coursesArray","Object","values","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","course","name","professor","id","_c","$RefreshReg$"],"sources":["/Users/sophiabanou/Documents/code/eam-1/react-todo-app/src/pages/Student_dilosi.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from 'react';\nimport { db } from '../components/firebase.js';\nimport { doc, setDoc, updateDoc, arrayUnion, getDoc, getDocs, collection } from 'firebase/firestore'\nimport { Link } from \"react-router-dom\";\nimport \"./../css/HomePage.css\";\nimport \"./../css/Student_dilosi.css\";\nimport Nav2 from \"./../components/Nav2.js\"\nimport Footer from \"./../components/footer.js\"\nimport Menu from \"./../components/student_menu.js\"\nimport firebase from 'firebase/compat/app';\n\nconst CourseTable = () => {\n    const [courses, setCourses] = useState([]);\n    useEffect(() => {\n        // Fetch data from Firebase when the component mounts\n        const fetchCourses = async () => {\n            try {\n                const snapshot = await firebase.database().ref('courses').once('value');\n                const data = snapshot.val();\n\n                // Check if there's data before updating the state\n                if (data) {\n                    const coursesArray = Object.values(data);\n                    console.log('Courses array:', coursesArray);\n                    setCourses(coursesArray);\n                }\n            }\n            catch (error) {\n                console.error('Error fetching data from Firebase:', error);\n            }\n        };\n        fetchCourses();\n    }, []); // Empty dependency array means this effect runs once when the component mounts\n\n\n\n    return (\n        <div>\n            <Nav2 />\n            <Menu />\n            <div>\n                <h2>Course Table</h2>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Course Name</th>\n                            <th>Instructor</th>\n                            {/* Add more table headers as needed */}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Object.values(courses).map((course) => (\n                            <tr key={course.id}>\n                                <td>{course.name}</td>\n                                <td>{course.professor}</td>\n                                {/* Add more table cells as needed */}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\nexport default CourseTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}